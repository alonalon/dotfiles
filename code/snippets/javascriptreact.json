{
	"bindThis": {
		"prefix": "bnd",
		"body": "this.$1 = this.$1.bind(this);$0",
		"description": "Binds the this of a method. To be used inside a constructor"
	},
	"consoleError": {
		"prefix": "cerr",
		"body": "console.error(${1:object}, '${1:object}');",
		"description": "Displays a message in the console and also includes a stack trace from where the method was called"
	},
	"consoleLog": {
		"prefix": "clog",
		"body": "console.log(${1:object}, '${1:object}');$0",
		"description": "Displays a message in the console"
	},
	"destructingObject": {
		"prefix": "dob",
		"body": "const {${1:propertyName}} = ${2:objectToDestruct};",
		"description": "Creates and assigns a local variable using object destructing"
	},
	"destructingArray": {
		"prefix": "dar",
		"body": "const [${1:propertyName}] = ${2:arrayToDestruct};",
		"description": "Creates and assigns a local variable using array destructing"
	},
	"forOf": {
		"prefix": "fof",
		"body": "for(const ${1:item} of ${2:object}) {\n\t${0}\n}",
		"description": "Iterating over property names of iterable objects"
	},
	"importModule": {
		"prefix": "imp",
		"body": "import ${2:moduleName} from ${1:module};$0",
		"description": "Imports entire module statement in ES6 syntax"
	},
	"namedArrowFunction": {
		"prefix": "afn",
		"body": "const ${1:name} = ${2:params} => ${3};",
		"description": "Creates a named arrow function in ES6 syntax"
	},
	"namedFunction": {
		"prefix": "nfn",
		"body": "const ${1:name} = ${2:params} => {\n\t${3}\n};",
		"description": "Creates a named function in ES6 syntax"
	},
	"propTypes": {
		"prefix": "rpt",
		"body": [
			"${1:ComponentName}.propTypes = {",
			"\t$2",
			"};"
		],
		"description": "Creates empty propTypes declaration"
	},
	"propTypeArray": {
		"prefix": "pta",
		"body": "PropTypes.array,",
		"description": "Array prop type"
	},
	"propTypeArrayRequired": {
		"prefix": "ptar",
		"body": "PropTypes.array.isRequired,",
		"description": "Array prop type required"
	},
	"propTypeBool": {
		"prefix": "ptb",
		"body": "PropTypes.bool,",
		"description": "Bool prop type"
	},
	"propTypeBoolRequired": {
		"prefix": "ptbr",
		"body": "PropTypes.bool.isRequired,",
		"description": "Bool prop type required"
	},
	"propTypeFunc": {
		"prefix": "ptf",
		"body": "PropTypes.func,",
		"description": "Func prop type"
	},
	"propTypeFuncRequired": {
		"prefix": "ptfr",
		"body": "PropTypes.func.isRequired,",
		"description": "Func prop type required"
	},
	"propTypeNumber": {
		"prefix": "ptn",
		"body": "PropTypes.number,",
		"description": "Number prop type"
	},
	"propTypeNumberRequired": {
		"prefix": "ptnr",
		"body": "PropTypes.number.isRequired,",
		"description": "Number prop type required"
	},
	"propTypeObject": {
		"prefix": "pto",
		"body": "PropTypes.object,",
		"description": "Object prop type"
	},
	"propTypeObjectRequired": {
		"prefix": "ptor",
		"body": "PropTypes.object.isRequired,",
		"description": "Object prop type required"
	},
	"propTypeString": {
		"prefix": "pts",
		"body": "PropTypes.string,",
		"description": "String prop type"
	},
	"propTypeStringRequired": {
		"prefix": "ptsr",
		"body": "PropTypes.string.isRequired,",
		"description": "String prop type required"
	},
	"propTypeNode": {
		"prefix": "ptnd",
		"body": "PropTypes.node,",
		"description": "Anything that can be rendered: numbers, strings, elements or an array"
	},
	"propTypeNodeRequired": {
		"prefix": "ptndr",
		"body": "PropTypes.node.isRequired,",
		"description": "Anything that can be rendered: numbers, strings, elements or an array required"
	},
	"propTypeElement": {
		"prefix": "ptel",
		"body": "PropTypes.element,",
		"description": "React element prop type"
	},
	"propTypeElementRequired": {
		"prefix": "ptelr",
		"body": "PropTypes.element.isRequired,",
		"description": "React element prop type required"
	},
	"propTypeInstanceOf": {
		"prefix": "pti",
		"body": "PropTypes.instanceOf($0),",
		"description": "Is an instance of a class prop type"
	},
	"propTypeInstanceOfRequired": {
		"prefix": "ptir",
		"body": "PropTypes.instanceOf($0).isRequired,",
		"description": "Is an instance of a class prop type required"
	},
	"propTypeEnum": {
		"prefix": "pte",
		"body": "PropTypes.oneOf(['$0']),",
		"description": "Prop type limited to specific values by treating it as an enum"
	},
	"propTypeEnumRequired": {
		"prefix": "pter",
		"body": "PropTypes.oneOf(['$0']).isRequired,",
		"description": "Prop type limited to specific values by treating it as an enum required"
	},
	"propTypeOneOfType": {
		"prefix": "ptet",
		"body": "PropTypes.oneOfType([\n\t$0\n]),",
		"description": "An object that could be one of many types"
	},
	"propTypeOneOfTypeRequired": {
		"prefix": "ptetr",
		"body": "PropTypes.oneOfType([\n\t$0\n]).isRequired,",
		"description": "An object that could be one of many types required"
	},
	"propTypeArrayOf": {
		"prefix": "ptao",
		"body": "PropTypes.arrayOf($0),",
		"description": "An array of a certain type"
	},
	"propTypeArrayOfRequired": {
		"prefix": "ptaor",
		"body": "PropTypes.arrayOf($0).isRequired,",
		"description": "An array of a certain type required"
	},
		"propTypeObjectOf": {
		"prefix": "ptoo",
		"body": "PropTypes.objectOf($0),",
		"description": "An object with property values of a certain type"
	},
	"propTypeObjectOfRequired": {
		"prefix": "ptoor",
		"body": "PropTypes.objectOf($0).isRequired,",
		"description": "An object with property values of a certain type required"
	},
	"propTypeShape": {
		"prefix": "ptsh",
		"body": "PropTypes.shape({\n\t$0\n}),",
		"description": "An object taking on a particular shape"
	},
	"propTypeShapeRequired": {
		"prefix": "ptshr",
		"body": "PropTypes.shape({\n\t$0\n}).isRequired,",
		"description": "An object taking on a particular shape required"
	},
	"reactClassComponent": {
		"prefix": "rcc",
		"body": [
			"class ${1:ComponentName} extends ${2:React.Component} {",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t<div>$0</div>",
			"\t\t);",
			"\t}",
			"}",
			"",
			"${1:ComponentName}.propTypes = {",
			"};",
			"",
			"export default ${1:ComponentName};"
		],
		"description": "Creates a React component class with ES6 module system"
	},
	"reactStatelessComponent": {
		"prefix": "rsc",
		"body": [
			"const ${1:ComponentName} = () => (",
			"\t<div>$0</div>",
			");",
			"",
			"${1:ComponentName}.propTypes = {",
			"};",
			"",
			"export default ${1:ComponentName};"
		],
		"description": "Creates a React component class with ES6 module system"
	},
	"requireModule": {
		"prefix": "req",
		"body": "const ${2:moduleName} = require(${1:module});$0",
		"description": "Require entire module"
	}
}
